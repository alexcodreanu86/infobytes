<div class="row">
  <div class="small-12 medium-10 medium-offset-1 large-8 large-offset-2 columns">
    <% if @errors %>
      <% @errors.each do |error| %>
        <p><%= error %></p>
      <% end %>
    <% end %>
    <a id="href-display" class="href-buttons button tiny" onmousedown="showInputs(); storePlaceHolder();">Add Link</a>
      <div id="fields">
        <div style="display: inline-block;">
          <a id="href-adder" class="href-buttons button tiny" onmousedown="addAnchorTag()">Insert Tag</a>
        </div>
        <div style="display: inline-block;">
          <label for="link" class="href-button-inputs">Text:<input type="text" id="linkText" value=""></label>
          <label for="link" class="href-button-inputs">Link:<input type="text" id="link" value=""></label>
      </div>    
      
    <%= form_for [@sub_chapter,@paragraph] do |f|%>

      <div><p>Body:</p><br>
        <input type="hidden" name="paragraph[body]" value="" id="paragraph_body">
      </div>
      <div contenteditable="true" id="editable-div" class="editable"></div>

      <div><%= f.submit :onclick => "grabInput()", class: "button" %></div>

    <% end %>

  </div>
</div>

<a class="close-reveal-modal">&#215;</a>

<script>
  // These toggle the visibility of the adding A tag buttons and input
  // (These are necessary for non-JQuery, with JQuery a partial could be brought in as a pop up)
  hideInputs = function() {
    display.style.display = 'inline-block'
    adder.style.display = 'none'
    link.parentNode.style.display = 'none'
    linkText.parentNode.style.display = 'none'
    link.value = "http://"
  }

  showInputs = function() {
    display.style.display = 'none'
    adder.style.display = 'inline-block'
    link.parentNode.style.display = 'inline-block'
    linkText.parentNode.style.display = 'inline-block'
  }

  // Adds an anchor tag inside the html code (so it is rendered as 
  // linked text in the editable div)
  // If there is a span (created by below storePlaceHolder) it finds it, fills it with the anchor tag, then
  // deletes the span.
  addAnchorTag = function() {
    if (document.getElementsByClassName("storageHTMLForAnchorTag").length > 0){
      var span = document.getElementsByClassName("storageHTMLForAnchorTag")[0]
      span.innerHTML="<a href='" + link.value + "'>" + linkText.value +"</a>"
      span.class = "filled"
      
      var spans = document.getElementsByClassName("storageHTMLForAnchorTag");
      while(spans.length) {
        var parent = spans[ 0 ].parentNode;
        while( spans[ 0 ].firstChild ) {
            parent.insertBefore(  spans[ 0 ].firstChild, spans[ 0 ] );
        }
         parent.removeChild( spans[ 0 ] );
      } 
    }
    else{
      // If user cursor was not previously in the editable div, it simply appends at the end
      editableDiv.innerHTML += ("<a href='" + link.value + "'>" + linkText.value +"</a>")
    }
    hideInputs()
  }

  // Checks if selected text is inside of a container
  containerNodeCheck = function(node, container) {
    while (node) {
      if (node.id === container) {
        return true;
      }
      node = node.parentNode;
    }
    return false;
  }

  // Transfers the contents of the div to the hidden input upon hitting submit so that
  // the form will pass the editable div content as a param
  grabInput = function() {
     document.getElementById('paragraph_body').value = editableDiv.innerHTML
   }

  // Creates a span to keep track of where the cursor was:
  storePlaceHolder = function() {
    document.execCommand("InsertHTML", false, "<span class='storageHTMLForAnchorTag'></span>")
  }

  // Stores needed elements inside varaibles:
  var display = document.getElementById('href-display')
  var adder = document.getElementById('href-adder')
  var link = document.getElementById('link')
  var linkText = document.getElementById('linkText')
  var editableDiv = document.getElementById('editable-div')
  // Sets href input and insert button to hidden at the start
  hideInputs()
</script>

<!-- For JQuery, bind the button Add Link on mousedown (on click removes the selection)
and popup the form with AJAX-->
